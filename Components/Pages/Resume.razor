@* --- Resume.razor --- *@
@page "/"
@rendermode InteractiveServer


@using System.Text
@using System.Globalization

@* --- DYNAMIC UI CONFIGURATION --- *@
<style>
    .resume-container {
        --item-card-font-size: @ui.ItemCardFontSize;
        --item-title-font-size: @ui.ItemTitleFontSize;
        --item-subtitle-font-size: @ui.ItemSubtitleFontSize;
    }
</style>

<div class="resume-container dark font-sans">

    <header class="header-section">
        <img src="@resume.Header.ProfileImageUrl" alt="@resume.Header.Name" class="profile-image">
        <div class="header-text">
            <h1 class="text-4xl font-bold text-white">@resume.Header.Name</h1>
            <p class="text-cyan-400 text-lg">@resume.Header.Title</p>
        </div>
    </header>

    <nav class="tab-navigation">
        <ul class="tab-list">
            @foreach (var tab in tabs)
            {
            var isActive = tab == activeTab;
            var activeClass = isActive ? "active" : "";
            <li class="tab-item">
                <button @onclick="() => SetActiveTab(tab)" class="tab-button @activeClass">
                    @tab
                </button>
            </li>
            }
        </ul>
    </nav>

    <main class="content-area">
        <div @key="activeTab">
            @switch (activeTab)
            {
            case "Dashboard":
            <section>
                <h2 class="section-title">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="icon">
                        <path fill="currentColor" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-5h2v2h-2v-2zm0-8h2v6h-2V7z"/>
                    </svg>
                    Personal Intel
                </h2>
                <ul class="grid grid-cols-1 md:grid-cols-2 dashboard-list">
                    @foreach (var detail in resume.Dashboard.ContactDetails)
                    {
                        <li class="info-item">
                            <strong>@detail.Type:</strong>&nbsp;
                            @if (detail.Url != null)
                            {
                                <a href="@detail.Url" target="_blank" class="text-cyan-400 hover:underline">
                                    @detail.Value
                                </a>
                            }
                            else
                            {
                                @detail.Value
                            }
                        </li>
                    }
                </ul>
                <h2 class="section-title">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="icon">
                        <path fill="currentColor" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-5h2v2h-2v-2zm0-8h2v6h-2V7z"/>
                    </svg>
                    Bio
                </h2>
                <p class="mt-8 text-gray-300 leading-relaxed border-l-4 border-cyan-500 pl-4">
                    @resume.Dashboard.Bio
                </p>
            </section>
            break;
            case "Skills":
            <section>
                <h2 class="section-title">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon"><polyline points="16 18 22 12 16 6" /><polyline points="8 6 2 12 8 18" /></svg>
                    Technical Arsenal
                </h2>
                <div class="space-y-8">
                    <div>
                        <h3 class="subsection-title">Core Competencies</h3>
                        <div class="skills-grid">
                            @foreach (var skill in resume.Skills.TechSkills) { <span class="skill-tag">@skill</span> }
                        </div>
                    </div>
                    <div>
                        <h3 class="subsection-title">Soft Skills & Methodologies</h3>
                        <div class="skills-grid">
                            @foreach (var skill in resume.Skills.SoftSkills) { <span class="skill-tag soft-skill">@skill</span> }
                        </div>
                    </div>
                    <div>
                        <h3 class="subsection-title">Languages</h3>
                        <div class="skills-grid">
                            @foreach (var lang in resume.Skills.Languages)
                            {
                            <span class="skill-tag language-skill">@($"{lang.Name} ({lang.Proficiency})")</span>
                            }
                        </div>
                    </div>
                </div>
            </section>
            break;
            case "Certifications":
            <section>
                <h2 class="section-title">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24.5" height="24.5" viewBox="0 0 26.5 26.5" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon">
                        <g transform="translate(-2 0)"/>
                        <path d="M19 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h10v2a1 1 0 0 0 .53.88 1 1 0 0 0 1-.05L18 20.2l2.45 1.63A1 1 0 0 0 22 21V19h2a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2zM18 17.5a2 2 0 1 1 1.5-1.5 2 2 0 0 1-1.5 1.5zM19.5 20.9l-1-0.7a0.5 0 0 0-0.7 0l-1 0.7V18.8a3 3 0 0 0 2.5 0zM22 17h-1.5s0 0 0 0a3.2 3.2 0 0 0 0.5-2.7A3.3 3.3 0 0 0 14 15.5a3.2 3.2 0 0 0 0.5 2.7s0 0 0 0v1.5H5V5h17z"/>
                        <path d="M6 9h10a0.5 0.5 0 0 0 0-1H6a0.5 0.5 0 0 0 0 1z"/>
                        <path d="M6 11h5a0.5 0.5 0 0 0 0-1H6a0.5 0.5 0 0 0 0 1z"/>
                        <path d="M6 13h5a0.5 0.5 0 0 0 0-1H6a0.5 0.5 0 0 0 0 1z"/>
                    </svg>
                    Certifications
                </h2>
                <ul class="space-y-6">
                    @foreach (var cert in resume.Certifications)
                    {
                        <li class="item-card cert-item">
                            <img src="@cert.ImageUrl" alt="@cert.IssuingBody Logo" class="cert-logo">
                            <div>
                                <h3 class="item-title">@cert.Name</h3>
                                <p class="item-subtitle">@cert.IssuingBody - Issued @cert.DateIssued</p>
                            </div>
                        </li>
                    }
                </ul>
            </section>
            break;
            case "Experience":
            <section>
                <h2 class="section-title">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon"><path d="M3 3v18h18" /><path d="m19 9-5 5-4-4-3 3" /></svg>
                    Career History
                </h2>
                <div class="timeline-container">
                    <ul class="timeline">
                        @foreach(var exp in resume.Experiences)
                        {
                        <li class="item-card">
                            <div class="flex justify-between items-start">
                                <div>
                                    <h3 class="item-title">@exp.JobTitle</h3>
                                    <p class="item-subtitle">@exp.Company</p>
                                </div>
                                <span class="text-sm text-gray-400 font-medium">@exp.DateRange</span>
                            </div>
                            <ul class="mt-4 list-disc list-inside space-y-2 text-gray-300">
                                @foreach(var duty in exp.Responsibilities) { <li>@duty</li> }
                            </ul>
                        </li>
                        }
                    </ul>
                </div>
            </section>
            break;
            case "Education":
            <section>
                <h2 class="section-title">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 25 25" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon">
                        <path d="M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H20v20H6.5a2.5 2.5 0 0 1 0-5H20" />
                    </svg>
                    Education
                </h2>
                <ul class="space-y-6">
                    @foreach (var edu in resume.Education)
                    {
                    <li class="item-card">
                        <h3 class="item-title">@edu.Degree</h3>
                        <p class="item-subtitle">@edu.Institution</p>
                        <p class="text-sm text-gray-400 mt-1">@edu.Year</p>
                    </li>
                    }
                </ul>
            </section>
            break;
            }
        </div>
    </main>
</div>

<style>
    @@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Roboto+Mono:wght@500;700&display=swap');

    html, body {
        margin: 0;
        padding: 0;
        overflow: hidden; /* This stops the "bounce" scroll effect */
        height: 100%;
    }

    :root {
        --bg-primary: #111827;
        --bg-secondary: #1f2937;
        --bg-tertiary: #374151;
        --accent-color: #06b6d4;
        --text-primary: #f9fafb;
        --text-secondary: #d1d5db;
        --border-color: #4b5563;
        --font-sans: 'Inter', sans-serif;
        --font-mono: 'Roboto Mono', monospace;
    }

    .resume-container.dark {
        background-color: var(--bg-primary);
        background-image: linear-gradient(rgba(255, 255, 255, 0.03) 1px, transparent 1px),
        linear-gradient(90deg, rgba(255, 255, 255, 0.03) 1px, transparent 1px);
        background-size: 1.7rem 1.7rem;
        color: var(--text-primary);
        box-shadow: 0 10px 30px rgba(0,0,0,0.5);
        height: 100dvh;
        overflow: hidden; /* This stops the "bounce" scroll effect */
        display: flex;
        flex-direction: column;
        width: 100%;
        font-family: var(--font-sans);
        font-size: 16px;
    }

    h1, h2, h3, .item-title {
        font-family: var(--font-mono);
    }

    .header-section {
        background-color: var(--bg-secondary);
        display: flex;
        align-items: center;
        justify-content: center;
        border-bottom: 1.5px solid var(--border-color);
        padding-bottom: 0.2rem;
        padding-top: 0.3rem;
    }

    .profile-image {
        width: 3.5rem;
        height: 3.5rem;
        border-radius: 9999px;
        border: 1.5px solid var(--accent-color);
    }

    .text-cyan-400, .section-title .icon, .info-item strong {
        text-shadow: 0 0 1px rgba(6, 182, 212, 0), /* MODIFIED */
        0 0 3px rgba(6, 182, 212, 0.2), /* MODIFIED */
        0 0 5px rgba(6, 182, 212, 0.1);  /* MODIFIED */
    }

    .tab-navigation {
        background-color: var(--bg-secondary);
        overflow-x: auto; /* ADD THIS LINE */
    }
    .tab-list { display: flex; list-style-type: none; padding: 0; margin: 0; }
    .tab-item { flex: 1 1 0; }
    .tab-button {
        width: 100%;
        padding: 1rem 0.5rem;
        font-weight: 600;
        color: var(--text-secondary);
        background-color: transparent;
        border: none;
        border-bottom: 3px solid transparent;
        cursor: pointer;
        transition: all 0.3s ease;
        text-align: center;
    }
    .tab-button:hover { background-color: var(--bg-tertiary); color: var(--text-primary); }
    .tab-button.active { color: var(--text-primary); border-bottom-color: var(--accent-color); }
    .content-area {
        padding: 2rem;
        flex: 1;
        overflow-y: auto;
    }
    .dashboard-list { gap: 1rem; }
    .section-title {
        font-size: 1.25rem;
        font-weight: 700;
        color: var(--text-primary);
        margin-bottom: 1.5rem;
        padding-bottom: 0.5rem;
        border-bottom: 1px solid var(--border-color);
        display: flex;
        align-items: center;
    }
    .icon { margin-right: 0.75rem; color: var(--accent-color); }
    .subsection-title {
        font-size: 1rem;
        font-weight: 600;
        color: var(--text-secondary);
        margin-bottom: 1.25rem;
        margin-top: 1.5rem;
    }
    .info-item {
        background-color: var(--bg-secondary);
        padding: 1rem;
        border-radius: 0.5rem;
        border-left: 3px solid var(--accent-color);
        margin-bottom: 1rem;
    }
    .cert-logo {
        width: 70px;  /* Size of the circle */
        height: 70px;
        border-radius: 50%; /* This makes it round */
        border: 7px solid var(--border-color);
        margin-right: 1rem; /* Space between logo and text */
        flex-shrink: 0; /* Prevents the image from shrinking if text is long */
    }

    /* Use flexbox to align the logo and text side-by-side */
    .cert-item {
        display: flex;
        align-items: center;
    }
    .info-item strong { color: var(--accent-color); }
    .skills-grid { display: flex; flex-wrap: wrap; gap: 0.75rem; }
    .skill-tag {
        background-color: rgba(6, 182, 212, 0.1);
        color: var(--accent-color);
        font-size: 1rem;
        font-weight: 500;
        padding: 0.5rem 1rem;
        border-radius: 9999px;
    }
    .skill-tag.soft-skill { background-color: rgba(139, 92, 246, 0.1); color: #a78bfa; }
    .skill-tag.language-skill {
        background-color: rgba(16, 185, 129, 0.1);
        color: #34d399;
    }
    .item-card {
        background-color: var(--bg-secondary);
        padding: 1.5rem;
        border-radius: 0.5rem;
        border: 1px solid var(--border-color);
        box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.2);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        margin-bottom: 1.5rem;
        font-size: var(--item-card-font-size);
    }
    .item-card:hover { transform: translateY(-2px); box-shadow: 0 7px 10px 0 rgba(0, 195, 255, 0.75); }
    .item-title {
        font-size: var(--item-title-font-size);
        font-weight: 600;
        color: var(--text-primary);
    }
    .item-subtitle {
        color: var(--text-secondary);
        font-size: var(--item-subtitle-font-size);
    }

    .timeline-container { position: relative; }
    .timeline-container::before {
        content: '';
        position: absolute;
        left: 1.5rem;
        top: 0;
        bottom: 0;
        width: 2px;
        background-color: var(--border-color);
        display: none; /* ADD THIS LINE */
    }
    .timeline .item-card {
        position: relative;
        padding-left: 4rem;
        margin-bottom: 2rem;
    }

    .content-area {
        padding: 2rem;
        flex: 1;
        overflow-y: auto;
        min-height: 0; /* ADD THIS LINE */
    }

    .content-area::-webkit-scrollbar {
        width: 10px;
    }

    .content-area::-webkit-scrollbar-track {
        background: var(--bg-secondary);
        border-radius: 5px;
    }

    .content-area::-webkit-scrollbar-thumb {
        background-color: var(--accent-color);
        border-radius: 5px;
        border: 2px solid var(--bg-secondary);
    }

    .content-area::-webkit-scrollbar-thumb:hover {
        background-color: #0891b2;
    }

    .timeline .item-card::before {
        content: '';
        position: absolute;
        left: calc(1.5rem - 7px);
        top: 1.5rem;
        height: 16px;
        width: 16px;
        border-radius: 50%;
        background-color: var(--bg-primary);
        border: 3px solid var(--accent-color);
        z-index: 1;
        display: none; /* ADD THIS LINE */
    }

    .header-text {
        margin-left: 1.2rem;
    }

    .header-text h1 {
        padding-top: 1rem;
        font-size: 1.25rem;
    }

    .header-text p {
        font-size: 0.7rem;
    }

    .item-card, .info-item, .skill-tag {
        animation: slideUpFadeIn 0.5s ease-out forwards;
        opacity: 0;
    }

    @@keyframes slideUpFadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @for (int i = 1; i <= 10; i++)
    {
        var delay = (i - 1) * 0.1;
        <text>
    .item-card:nth-child(@(i)),
    .info-item:nth-child(@(i)),
    .skill-tag:nth-child(@(i)) {
        animation-delay: @(delay.ToString("0.0", CultureInfo.InvariantCulture))s;
    }
    </text>
    }

    @@media (max-width: 640px) {
    .content-area {
        padding: 1rem; /* Reduce padding on the main content area */
    }
    .item-card {
        padding: 0.5rem; /* Reduce padding inside the cards */
    }
    .timeline .item-card {
        padding-left: 1rem; /* Reduce the large left padding for timeline items */
    }
    }
</style>

@code {
private string activeTab = "Dashboard";
private readonly string[] tabs = { "Dashboard", "Skills", "Certifications", "Experience", "Education" };
private void SetActiveTab(string tab) => activeTab = tab;

// --- CONFIGURATION OBJECTS ---
// All data is now loaded from our static helper class.
private readonly ResumeConfig resume = ResumeData.GetResumeData();
private readonly UiConfig ui = new();
}